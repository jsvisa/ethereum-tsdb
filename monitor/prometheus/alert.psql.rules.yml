groups:
  - name: PostgresExporter
    rules:
      - alert: PostgresqlDown
        expr: 'pg_up == 0'
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: Postgresql down (instance {{ $labels.instance }})
          description: "Postgresql instance is down\n  VALUE = {{ $value }}"

      - alert: PostgresqlRestarted
        expr: 'time() - pg_postmaster_start_time_seconds < 60'
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: Postgresql restarted (instance {{ $labels.instance }})
          description: "Postgresql restarted\n  VALUE = {{ $value }}"

      - alert: PostgresqlExporterError
        expr: 'pg_exporter_last_scrape_error > 0'
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: Postgresql exporter error (instance {{ $labels.instance }})
          description: "Postgresql exporter is showing errors. A query may be buggy in query.yaml\n  VALUE = {{ $value }}"

      - alert: PostgresqlTableNotAutoVacuumed
        expr: '(pg_stat_user_tables_last_autovacuum > 0) and (time() - pg_stat_user_tables_last_autovacuum) > 60 * 60 * 24 * 10'
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: Postgresql table not auto vacuumed (instance {{ $labels.instance }})
          description: "Table {{ $labels.relname }} has not been auto vacuumed for 10 days\n  VALUE = {{ $value }}"

      - alert: PostgresqlTableNotAutoAnalyzed
        expr: '(pg_stat_user_tables_last_autoanalyze > 0) and (time() - pg_stat_user_tables_last_autoanalyze) > 24 * 60 * 60 * 10'
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: Postgresql table not auto analyzed (instance {{ $labels.instance }})
          description: "Table {{ $labels.relname }} has not been auto analyzed for 10 days\n  VALUE = {{ $value }}"

      - alert: PostgresqlTooManyConnections
        expr: 'sum by (datname) (pg_stat_activity_count{datname!~"template.*|postgres"}) > pg_settings_max_connections * 0.8'
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: Postgresql too many connections (instance {{ $labels.instance }})
          description: "PostgreSQL instance has too many connections (> 80%).\n  VALUE = {{ $value }}"

      - alert: PostgresqlNotEnoughConnections
        expr: 'sum by (datname) (pg_stat_activity_count{datname!~"template.*|postgres"}) < 5'
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: Postgresql not enough connections (instance {{ $labels.instance }})
          description: "PostgreSQL instance should have more connections (> 5)\n  VALUE = {{ $value }}"

      - alert: PostgresqlDeadLocks
        expr: 'increase(pg_stat_database_deadlocks{datname!~"template.*|postgres"}[1m]) > 5'
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: Postgresql dead locks (instance {{ $labels.instance }})
          description: "PostgreSQL has dead-locks\n  VALUE = {{ $value }}"

      # no worry of rollbacked txs https://dba.stackexchange.com/a/74160
      - alert: PostgresqlHighRollbackRate
        expr: 'rate(pg_stat_database_xact_rollback{datname!~"template.*|postgres", datid!="0"}[3m]) / rate(pg_stat_database_xact_commit{datname!~"template.*|postgres", datid!="0"}[3m]) > 0.45'
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: Postgresql high rollback rate (instance {{ $labels.instance }})
          description: >-
            Ratio of transactions being aborted compared to committed is > 45%
            VALUE = {{ $value | printf "%0.2f" }}

      - alert: PostgresqlCommitRateLow
        expr: 'rate(pg_stat_database_xact_commit{datname!~"template.*|postgres", datid!="0"}[1m]) < 100'
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: Postgresql commit rate low (instance {{ $labels.instance }})
          description: "Postgresql seems to be processing very few transactions\n  VALUE = {{ $value }}"

      - alert: PostgresqlLowXidConsumption
        expr: 'rate(pg_txid_current[1m]) < 5'
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: Postgresql low XID consumption (instance {{ $labels.instance }})
          description: "Postgresql seems to be consuming transaction IDs very slowly\n  VALUE = {{ $value }}"

      - alert: PostgresqlHighRateStatementTimeout
        expr: 'rate(postgresql_errors_total{type="statement_timeout"}[1m]) > 3'
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: Postgresql high rate statement timeout (instance {{ $labels.instance }})
          description: "Postgres transactions showing high rate of statement timeouts\n  VALUE = {{ $value }}"

      - alert: PostgresqlHighRateDeadlock
        expr: 'increase(postgresql_errors_total{type="deadlock_detected"}[1m]) > 1'
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: Postgresql high rate deadlock (instance {{ $labels.instance }})
          description: "Postgres detected deadlocks\n  VALUE = {{ $value }}"

      - alert: PostgresqlUnusedReplicationSlot
        expr: 'pg_replication_slots_active == 0'
        for: 1m
        labels:
          severity: warning
        annotations:
          summary: Postgresql unused replication slot (instance {{ $labels.instance }})
          description: "Unused Replication Slots\n  VALUE = {{ $value }}"

      - alert: PostgresqlTooManyDeadTuples
        expr: '((pg_stat_user_tables_n_dead_tup > 10000) / (pg_stat_user_tables_n_live_tup + pg_stat_user_tables_n_dead_tup)) >= 0.1'
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: Postgresql too many dead tuples (instance {{ $labels.instance }})
          description: "PostgreSQL dead tuples is too large\n  VALUE = {{ $value }}"

      - alert: PostgresqlConfigurationChanged
        expr: '{__name__=~"pg_settings_.*"} != ON(__name__) {__name__=~"pg_settings_([^t]|t[^r]|tr[^a]|tra[^n]|tran[^s]|trans[^a]|transa[^c]|transac[^t]|transact[^i]|transacti[^o]|transactio[^n]|transaction[^_]|transaction_[^r]|transaction_r[^e]|transaction_re[^a]|transaction_rea[^d]|transaction_read[^_]|transaction_read_[^o]|transaction_read_o[^n]|transaction_read_on[^l]|transaction_read_onl[^y]).*"} OFFSET 5m'
        for: 0m
        labels:
          severity: info
        annotations:
          summary: Postgresql configuration changed (instance {{ $labels.instance }})
          description: "Postgres Database configuration change has occurred\n  VALUE = {{ $value }}"

      - alert: PostgresqlSslCompressionActive
        expr: 'sum(pg_stat_ssl_compression) > 0'
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: Postgresql SSL compression active (instance {{ $labels.instance }})
          description: "Database connections with SSL compression enabled. This may add significant jitter in replication delay. Replicas should turn off SSL compression via `sslcompression=0` in `recovery.conf`.\n  VALUE = {{ $value }}"

      - alert: PostgresqlTooManyLocksAcquired
        expr: '((sum (pg_locks_count)) / (pg_settings_max_locks_per_transaction * pg_settings_max_connections)) > 0.20'
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: Postgresql too many locks acquired (instance {{ $labels.instance }})
          description: "Too many locks acquired on the database. If this alert happens frequently, we may need to increase the postgres setting max_locks_per_transaction.\n  VALUE = {{ $value }}"

      - alert: PostgresqlBloatIndexHigh(>80%)
        expr: 'pg_bloat_btree_bloat_pct > 80 and on (idxname) (pg_bloat_btree_real_size > 100000000)'
        for: 1h
        labels:
          severity: warning
        annotations:
          summary: Postgresql bloat index high (> 80%) (instance {{ $labels.instance }})
          description: "The index {{ $labels.idxname }} is bloated. You should execute `REINDEX INDEX CONCURRENTLY {{ $labels.idxname }};`\n  VALUE = {{ $value }}"

      - alert: PostgresqlBloatTableHigh(>80%)
        expr: 'pg_bloat_table_bloat_pct > 80 and on (relname) (pg_bloat_table_real_size > 200000000)'
        for: 1h
        labels:
          severity: warning
        annotations:
          summary: Postgresql bloat table high (> 80%) (instance {{ $labels.instance }})
          description: "The table {{ $labels.relname }} is bloated. You should execute `VACUUM {{ $labels.relname }};`\n  VALUE = {{ $value }}"

      # steal from https://github.com/fi-ts/postgreslet/issues/10
      - alert: PostgreSQLMaxConnectionsReached
        expr: sum(pg_stat_activity_count) by (instance) >= sum(pg_settings_max_connections) by (instance) - sum(pg_settings_superuser_reserved_connections) by (instance)
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: '{{ $labels.instance }} has maxed out Postgres connections.'
          description: '{{ $labels.instance }} is exceeding the currently configured maximum Postgres connection limit (current value: {{ $value }}s). Services may be degraded - please take immediate action (you probably need to increase max_connections in the Docker image and re-deploy.'

      - alert: PostgreSQLHighConnections
        expr: sum(pg_stat_activity_count) by (instance) > (sum(pg_settings_max_connections) by (instance) - sum(pg_settings_superuser_reserved_connections) by (instance)) * 0.8
        for: 10m
        labels:
          severity: critical
        annotations:
          summary: '{{ $labels.instance }} is over 80% of max Postgres connections.'
          descriptoon: '{{ $labels.instance }} is exceeding 80% of the currently configured maximum Postgres connection limit (current value: {{ $value }}s). Please check utilization graphs and confirm if this is normal service growth, abuse or an otherwise temporary condition or if new resources need to be provisioned (or the limits increased, which is mostly likely).'

      - alert: PostgreSQLSlowQueries
        expr: avg(rate(pg_stat_activity_max_tx_duration{datname!~"template.*"}[2m])) by (datname) > 2 * 60
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: 'PostgreSQL high number of slow on {{ $labels.cluster }} for database {{ $labels.datname }} '
          description: 'PostgreSQL high number of slow queries {{ $labels.cluster }} for database {{ $labels.datname }} with a value of {{ $value }} '

      - alert: PostgreSQLQPS
        expr: avg(irate(pg_stat_database_xact_commit{datname!~"template.*"}[5m]) + irate(pg_stat_database_xact_rollback{datname!~"template.*"}[5m])) by (datname) > 10000
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: 'PostgreSQL high number of queries per second {{ $labels.cluster }} for database {{ $labels.datname }}'
          description: 'PostgreSQL high number of queries per second on {{ $labels.cluster }} for database {{ $labels.datname }} with a value of {{ $value }}'

      - alert: PostgreSQLCacheHitRatio
        expr: avg(rate(pg_stat_database_blks_hit{datname!~"template.*"}[5m]) / (rate(pg_stat_database_blks_hit{datname!~"template.*"}[5m]) + rate(pg_stat_database_blks_read{datname!~"template.*"}[5m]))) by (datname) < 0.7
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: 'PostgreSQL low cache hit rate on {{ $labels.cluster }} for database {{ $labels.datname }}'
          description: 'PostgreSQL low on cache hit rate on {{ $labels.cluster }} for database {{ $labels.datname }} with a value of {{ $value }}'

      - alert: PostgreSQL_PanicError
        expr: >-
          sum(increase(pg_logs_total{severity="PANIC"}[5m])) by (server) > 0
        labels:
          severity: panic
        annotations:
          message: 'PostgreSQL has logged PANIC errors '
          description: >-
            Server {{ $labels.pod }} has logged {{ $value }} PANIC errors in
            the last five minutes. Please take a look at the log files to find
            out what's going on.

      - alert: PostgreSQL_OtherError
        expr: >-
          sum(rate(pg_errors_total{type="other"}[5m])) by (server) > 0.5
        labels:
          severity: warning
        annotations:
          message: "PostgreSQL is showing a high rate of 'other' errors "
          description: >-
            Server {{ $labels.pod }} is logging {{ $value | printf "%.1f" }}
            'other' errors per second.

      - alert: PostgreSQL_FatalError
        expr: >-
          sum(increase(pg_logs_total{severity="FATAL"}[5m])) by (server) > 0
        labels:
          severity: critical
        annotations:
          message: 'PostgreSQL has logged FATAL errors '
          description: >-
            Server {{ $labels.pod }} has logged {{ $value }} FATAL errors in
            the last five minutes. Please take a look at the log files to find
            out what's going on.

      - alert: PostgreSQL_SlowQueries
        expr: >-
          avg(avg_over_time(pg_stat_activity_max_tx_duration[2m])) by (server, datname) > 120
        labels:
          severity: warning
        annotations:
          message: 'PostgreSQL has a high number of slow queries '
          description: >-
            Server {{ $labels.pod }} has a high number of slow queries for
            database {{ $labels.datname }} with a value of {{ $value | printf "%.2f" }}.
